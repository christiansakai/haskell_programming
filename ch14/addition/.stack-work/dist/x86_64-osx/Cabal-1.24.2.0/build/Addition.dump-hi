
==================== FINAL INTERFACE ====================
2017-04-25 03:31:51.653143 UTC

interface addition-0.1.0.0-XzculcwkFM4Q1FUtqIheb:Addition 8002
  interface hash: d90c9c36910cb8bc80e0b35c3d89b993
  ABI hash: 3206e76f59e6a9948ce5f56b8edcc2d3
  export-list hash: 3b161feab2e0528e80bf03671871d839
  orphan hash: c0c6bacaad07d2cb0348b305912f3969
  flag hash: 6fc74547fbd72660fbdc96d0ba10d9b2
  sig of: Nothing
  used TH splices: False
  where
exports:
  Addition.dividedBy
  Addition.main
  Addition.multiplyRecursive
  Addition.sayHello
module dependencies:
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-4HPxin1iv6RAndS8lH3nzo
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.3@hspec-2.4.3-HBpqzXYRXJ933IT5Hc0L2H
                      hspec-core-2.4.3@hspec-core-2.4.3-AJmF76CegGE4OD4kmqTEph
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.1.4@quickcheck-io-0.1.4-C5t3MfRsr5zrFam5nRAFy:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.3@hspec-core-2.4.3-AJmF76CegGE4OD4kmqTEph:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hspec-2.4.3@hspec-2.4.3-HBpqzXYRXJ933IT5Hc0L2H:Test.Hspec 3c7716f891bd2f357ba48c29030d4fef
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-AJmF76CegGE4OD4kmqTEph:Test.Hspec.Core.Runner 8cd1cbd06a763652b50ef859ae8ec934
import  -/  hspec-core-2.4.3@hspec-core-2.4.3-AJmF76CegGE4OD4kmqTEph:Test.Hspec.Core.Spec e1d89a3730394a0cb61ed4547161a747
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
62cd5f5d0014a6a905d0ce3398644da6
  $s$fEq(,) ::
    GHC.Classes.Eq (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger
                     GHC.Integer.Type.$fEqInteger)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger
                     GHC.Integer.Type.$fEqInteger) -}
bfbf59f2319bf4d540d326a83aa2910f
  $s$fShow(,) ::
    GHC.Show.Show (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Show.$fShowInteger
                     GHC.Show.$fShowInteger)
                  Addition.$s$fShow(,)_$s$fShow(,)_$cshow
                  Addition.$s$fShow(,)_$s$fShow(,)_$cshowList -}
ea462b31cdaf0677b72bd5c1912ccad4
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Integer.Type.Integer
                   @ GHC.Integer.Type.Integer
                   GHC.Show.$fShowInteger
                   GHC.Show.$fShowInteger
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1b8cfa552c3e41f2bfe74a9b0f15d862
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Integer.Type.Integer
                      @ GHC.Integer.Type.Integer
                      GHC.Show.$fShowInteger
                      GHC.Show.$fShowInteger
                      GHC.Show.shows22)
                   eta
                   eta1) -}
1383eb8f3f1b1861053c11b8f7800a09
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Addition.$trModule2
                   Addition.$trModule1) -}
c34c7d907287796bbeafcb55e7521421
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Addition"#) -}
096faa091a8655c40bf944c79a63c6dc
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "addition-0.1.0.0-XzculcwkFM4Q1FUtqIheb"#) -}
4f9725e579bb61aba92d67effbe75688
  $wdividedBy :: GHC.Real.Integral a => a -> a -> (# a, a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a (w :: GHC.Real.Integral a) (w1 :: a) (w2 :: a) ->
                 let {
                   $dReal :: GHC.Real.Real a = GHC.Real.$p1Integral @ a w
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Real @ a $dReal
                 } in
                 let {
                   lvl8 :: a = GHC.Num.fromInteger @ a $dNum Addition.dividedBy2
                 } in
                 let {
                   $dOrd :: GHC.Classes.Ord a = GHC.Real.$p2Real @ a $dReal
                 } in
                 letrec {
                   $wgo1 :: a -> a -> a -> (# a, a #)
                     {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
                   = \ (w3 :: a) (w4 :: a) (w5 :: a) ->
                     case GHC.Classes.< @ a $dOrd w3 w4 of wild {
                       GHC.Types.False
                       -> $wgo1
                            (GHC.Num.- @ a $dNum w3 w4)
                            w4
                            (GHC.Num.+ @ a $dNum w5 lvl8)
                       GHC.Types.True -> (# w5, w3 #) }
                 } in
                 $wgo1 w1 w2 (GHC.Num.fromInteger @ a $dNum Addition.dividedBy1)) -}
daacf71c05f20e0dc4bb37ba4a35af84
  $wgo ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 3, Strictness: <S,U><S,U><L,U>, Inline: [0] -}
3ac00f0273f2433fd8f6c59a43b2f836
  dividedBy :: GHC.Real.Integral a => a -> a -> (a, a)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><L,U><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a (w :: GHC.Real.Integral a) (w1 :: a) (w2 :: a) ->
                 case Addition.$wdividedBy @ a w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
36e4a7c0a88aef84287e1bb16f71cb87
  dividedBy1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
9d2e9134061d9ba2f4333f0aebd95db9
  dividedBy2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
c9fd506d4b0026a0a230c7e0d67f9147
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Addition.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
b6b7f36e66fa1228065e2781331cabbf
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        Addition.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
e4f2103d07e4c0add21ad7451c44b87e
  main10 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main11
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
df167e23e88c584a2e5bcd3dc2a358b6
  main100 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main101) -}
c889499ac8bc5adbc8bb3f8a2d0c3c0c
  main101 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Addition.main120
                   Addition.main111
                   GHC.Types.False
                   Addition.main102
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
beca3b55d417de86500748966354ffe8
  main102 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Addition.main103) -}
fd214ac00813368f7c597d6b796a0cae
  main103 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Addition.main104
                   (GHC.Types.[] @ GHC.Types.Char)
                   Addition.main16
                   Addition.main16) -}
f53dd69ac67e924f2086810a5920db14
  main104 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Integer.Type.Integer
                   Addition.main105
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Integer.Type.$fEqInteger
                   GHC.Show.$fShowInteger) -}
51d0f1c613e3904af027ef3da9ecf08f
  main105 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Addition.main106) -}
da8efb30160add39f2cb40af74d536df
  main106 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Addition.main107) -}
8b08efef1dfe9477827fdc06374fbf56
  main107 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main30
                   Addition.main108
                   GHC.Stack.Types.EmptyCallStack) -}
aa65c60cc9798705b39a24568febbb19
  main108 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main110
                   Addition.main25
                   Addition.main110
                   Addition.main109) -}
092e7a31679173619e5483df4c9af4f8
  main109 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
e9ce731af21481264dbb546c28b48b9e
  main11 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main12) -}
a176df56cc9384c57ea169c0f676f568
  main110 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
b4c636eea9f7b7fe62717319532a5332
  main111 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Addition.main112
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
4c1632cbcc95a11dca9bc96ad236bedf
  main112 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Addition.main113) -}
e75d5048c70e7f1ec283d83b43b51fa7
  main113 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Addition.main114) -}
d3f3f4ad25489d2672d9e7795dfc4d6c
  main114 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Addition.main115) -}
3a7c1b43addda4b591523e3b831ebe80
  main115 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Addition.main116) -}
e47b89f21d61c6777e23e543667a5408
  main116 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main41
                   Addition.main117
                   GHC.Stack.Types.EmptyCallStack) -}
0dcc7033d3c97bfa806ecc428a144625
  main117 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main119
                   Addition.main39
                   Addition.main119
                   Addition.main118) -}
9bb8f956d4d9313d6eea89da2a9728ca
  main118 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
eb7687b4da4c8caf183e0b7f8943cb16
  main119 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 12#) -}
5d422462d18545b0c7a93451dec4ee5d
  main12 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Addition.main42
                   Addition.main31
                   GHC.Types.False
                   Addition.main13
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
a1819c669fd7733b6b59f773259c7062
  main120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main72
                   Addition.main121) -}
4ff13fbd129dd585c39f6400b4d4f5f6
  main121 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " + 2 is equal to 4"#) -}
78babd1aa8a5930bcf90780dab39bfe8
  main122 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main123
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
103d2e99d1cb60d9b073f32382af2af0
  main123 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main124) -}
763ec1cdc656f748d258a3f78345e761
  main124 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Addition.main143
                   Addition.main134
                   GHC.Types.False
                   Addition.main125
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
f9bd82e9e749f980f89522261977f6d4
  main125 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Addition.main126) -}
c73cc547d2a1ebd00e043fbffa665440
  main126 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Addition.main127
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   GHC.Types.True) -}
a2df67e4040ba8258893437fb39819af
  main127 ::
    GHC.Base.String
    -> GHC.Types.Bool -> GHC.Types.Bool -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Types.Bool
                   Addition.main128
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Classes.$fEqBool
                   GHC.Show.$fShowBool) -}
edfe3bc1123aac948e0552233995592d
  main128 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Addition.main129) -}
bc164fb2a3d6ba640d8059e8658f4856
  main129 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Addition.main130) -}
31fc92460dc9902e75c50468acc81f4b
  main13 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Addition.main14) -}
97463a49365ae1ee76d35a29d3f73777
  main130 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main30
                   Addition.main131
                   GHC.Stack.Types.EmptyCallStack) -}
facb777619b54ec78ca5310986bebf3d
  main131 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main133
                   Addition.main25
                   Addition.main133
                   Addition.main132) -}
c890c8d2bdf3a1b58a755f259b431d7e
  main132 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 34#) -}
38f1d8bd0e566221db77ff05483a5cfc
  main133 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 10#) -}
cac25116be497107786d3cd0e337c338
  main134 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Addition.main135
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
b36ab195f937ac6baeffd4562b93bce3
  main135 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Addition.main136) -}
3556540d8b73261b10482adf267937fb
  main136 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Addition.main137) -}
57f44ad0986d7a41af3add0d4fd9a764
  main137 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Addition.main138) -}
100d7db6275737764afbd807eef177e2
  main138 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Addition.main139) -}
8a199725d2597ae4414c554aef079b5d
  main139 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main41
                   Addition.main140
                   GHC.Stack.Types.EmptyCallStack) -}
f635833f5b20b6b7220db995e9afe5c3
  main14 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Addition.main19
                   (GHC.Types.[] @ GHC.Types.Char)
                   Addition.main18
                   Addition.main15) -}
efc72bb27b2705d0c35ec8c328622143
  main140 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main142
                   Addition.main39
                   Addition.main142
                   Addition.main141) -}
13049cc618859a288b868093c2621009
  main141 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 33#) -}
5e324f84abeea19d5cc5b1ce33c63647
  main142 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9#) -}
408d1f9e923cebaab5f7dd212b8c8413
  main143 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main98
                   Addition.main144) -}
6476183af36dfd9d50d4912e348ea8d5
  main144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " + 1 is greater than 1"#) -}
97f7c5219febadec35b294d9390333b7
  main145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main147
                   Addition.main146) -}
a295886ac707b845f036046dc36be5e8
  main146 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ddition"#) -}
a4aad1587e38c57bfd24f3547c3cc4e8
  main147 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'A'#) -}
c78e4708edc3cdb5317b261f7dd91de2
  main15 :: GHC.Integer.Type.Integer
  {- Unfolding: (Addition.main_$smultiplyRecursive
                   Addition.main17
                   Addition.main16) -}
bf3d1edc9edd25475b68358ac3574084
  main16 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
b5f7e8fad2ec6c661c50b505139ba006
  main17 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
f06f6f495bda4c2d6413f0ec79d1fc9f
  main18 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (12) -}
3a5fcda2cdc37290509dd0acfd3a8e62
  main19 ::
    GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ GHC.Integer.Type.Integer
                   Addition.main20
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   GHC.Integer.Type.$fEqInteger
                   GHC.Show.$fShowInteger) -}
efd2e4584750bb76e04df7c816ea7b09
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Addition.main3 #)) -}
2b55f93d47d106da92e9237fb2b79920
  main20 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Addition.main21) -}
d7c660a802a74186d8878b85a687f371
  main21 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Addition.main22) -}
68353c15b41f46a7a8d05613117bfb74
  main22 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main30
                   Addition.main23
                   GHC.Stack.Types.EmptyCallStack) -}
741255dc5444737489daba88d79ca0f8
  main23 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main26
                   Addition.main25
                   Addition.main26
                   Addition.main24) -}
95b2a37b6a299db0845007f847ccef23
  main24 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42#) -}
e280a287d8de458c902127c8d967afd1
  main25 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7#) -}
ca63b9821fee638310a34ff09b3e0faa
  main26 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22#) -}
6d156e0cb4a99f0617e41d5df7df68de
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Addition.hs"#) -}
96c368c0ed4e03887b4df3cdd88ca3d3
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Addition"#) -}
0767abfce4f96edcfb89754ceff09c47
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "addition-0.1.0.0-XzculcwkFM4Q1FUtqIheb"#) -}
3c715d554b8911938a236ababd307262
  main3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Addition.main4)) -}
7d1458e6c5bfda279747f7748872309f
  main30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
a6bac6ab20e8ce48e19d947a39f1c79f
  main31 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Addition.main32
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
84509f1d2b5d4ca0e29d6cb8d6e9665b
  main32 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Addition.main33) -}
d72976bdc78885ba47326cf473267c59
  main33 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Addition.main34) -}
a61ed80ea14fb94967c8552bcf3192c9
  main34 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Addition.main35) -}
6a055411709face11aa784345a02566a
  main35 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Addition.main36) -}
8fe3df426a0981763c91662486607f89
  main36 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main41
                   Addition.main37
                   GHC.Stack.Types.EmptyCallStack) -}
01116ccde1063a1941beeed22baf1f46
  main37 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main40
                   Addition.main39
                   Addition.main40
                   Addition.main38) -}
7c12d336a02a7f5d3ef742d9aafd7843
  main38 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 37#) -}
a6c0eb1d23ae1c7c8fdd43361feec0d8
  main39 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
4940f69836611d46960b8fbadcc83271
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
0a3edc13fa64e71d79c34d411a814529
  main40 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 21#) -}
c42ca19f9f57ab8dd75925fd305af10f
  main41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
190328e46c0b2ee5fe70e63ff94da042
  main42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main44
                   Addition.main43) -}
92a0aed77f9e89d51c9ae5097ee3eea7
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   " multiplyRecursive 4 is 12"#) -}
a734377f0e836102166d2984b223144b
  main44 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '3'#) -}
41d1c42c941471688dec44e541c76336
  main45 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main46
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ca3f97cfc167a8d1ba484f709a5fff4c
  main46 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main47) -}
f10ebfb05f44a8a23ec56d13c61438d8
  main47 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Addition.main70
                   Addition.main62
                   GHC.Types.False
                   Addition.main48
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
daf456cedbcda2acf6d0fe708838e1c3
  main48 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Addition.main49) -}
c2a0f2d5be80e5b75613680550c423a4
  main49 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Addition.main55
                   (GHC.Types.[] @ GHC.Types.Char)
                   Addition.main53
                   Addition.main50) -}
6f029ca924ff483ae23d5b4e57b2349f
  main5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Addition.main145
                   Addition.main6) -}
6acac2ae6da8d2c039c2e6f904c3bea3
  main50 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Unfolding: (case Addition.$wgo
                        Addition.main52
                        Addition.main51
                        Addition.dividedBy1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
523387a38276390dc372f4cc15ca5f17
  main51 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (5) -}
4c390e9346a7091c6b666399dd47f602
  main52 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (22) -}
305c02de38ee58b788645579b1013d77
  main53 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs, Unfolding: ((Addition.main16, Addition.main54)) -}
c2ac602e3b2ab2cb555b376fac860f01
  main54 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
0113f61cac80b2932b6630e0cfe86b25
  main55 ::
    GHC.Base.String
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   Addition.main56
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Addition.$s$fEq(,)
                   Addition.$s$fShow(,)) -}
7999f51b63fa74261400334e3e417a8c
  main56 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Addition.main57) -}
93abcaac77516e8f0c2302d2d2868478
  main57 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Addition.main58) -}
624cc198fa7ad0fb97c0c42bc3670c77
  main58 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main30
                   Addition.main59
                   GHC.Stack.Types.EmptyCallStack) -}
1d3c1b6f5b8d19b732836e92e0a75755
  main59 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main61
                   Addition.main25
                   Addition.main61
                   Addition.main60) -}
b2843f23ca5a4d737b8a47a61e0f273e
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main122
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Addition.main7) -}
b4dde43ec9075b132677a87c2b19c374
  main60 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39#) -}
3f063a21fe9681cf396ccc994a545a31
  main61 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 19#) -}
138d6002f566c3d0a64a02ddd72c4634
  main62 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Addition.main63
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
f652e17ffc3ea7b06860ea693e59ae28
  main63 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Addition.main64) -}
ea42f402f301b6e5adc10a9682313682
  main64 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Addition.main65) -}
c173011b2f668c40560f7e712b15779c
  main65 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Addition.main66) -}
0e4ba1d44fa90b9e438ff66f0a3eb4af
  main66 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Addition.main67) -}
53a360e8ce401899bb100dfd1b6765e0
  main67 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main41
                   Addition.main68
                   GHC.Stack.Types.EmptyCallStack) -}
dae6dd17ec8d4415907954d2a233fe31
  main68 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main69
                   Addition.main39
                   Addition.main69
                   Addition.main24) -}
6715fe6868eab21bd729db3bf3011d75
  main69 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18#) -}
bd33511586b8bda5249a8ac5236304dc
  main7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main99
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Addition.main8) -}
2c2d419260ee340f0910427ef5ff9e4f
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main72
                   Addition.main71) -}
00c0b3777a2c809b4d76d806a37278ec
  main71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "2 divided by 5 is 4 remainder 2"#) -}
6bf32abc5dcb6c3de540eae08bf48fe9
  main72 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '2'#) -}
f8ea538826cc1a842f72914970d965b4
  main73 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main74
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
9d12400175c3d154cb7aa8cdf16c0a0f
  main74 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main75) -}
219344ae2c60986faa2243e668fb9871
  main75 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Addition.main96
                   Addition.main87
                   GHC.Types.False
                   Addition.main76
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
59d3364272d929039597370c0fe7c609
  main76 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Addition.main77) -}
99603c5ef930e5a61109f498a962f1d0
  main77 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Addition.main81
                   (GHC.Types.[] @ GHC.Types.Char)
                   Addition.main80
                   Addition.main78) -}
53dd79e791db18b8b9008f0a1ad57e26
  main78 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Unfolding: (case Addition.$wgo
                        Addition.main79
                        Addition.main17
                        Addition.dividedBy1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
98dc14ee2e4b6545d01a0f29f7b207dc
  main79 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (15) -}
e2d00a6354b9eb13996fd366b172aade
  main8 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main73
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Addition.main9) -}
2e9e052cf4886dadafe78e7be408191d
  main80 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs,
     Unfolding: ((Addition.main51, Addition.dividedBy1)) -}
50e6b1455ae695dc915583f887814965
  main81 ::
    GHC.Base.String
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   Addition.main82
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Addition.$s$fEq(,)
                   Addition.$s$fShow(,)) -}
623189079cf1c775927ac442e8bdfb1d
  main82 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Addition.main83) -}
6b83ac53495a0e80a096c1d41d928a3f
  main83 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Addition.main84) -}
331fd78b6e54caf5ca460a2b27d99f83
  main84 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main30
                   Addition.main85
                   GHC.Stack.Types.EmptyCallStack) -}
a2639d646f6067e8b266cfab513caebd
  main85 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main86
                   Addition.main25
                   Addition.main86
                   Addition.main60) -}
6b1c96bd1a681d3fa69dd4e7b3418538
  main86 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 16#) -}
8fce982f890de20a1fb9d04f8ba7c646
  main87 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Addition.main88
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
947688c00d8031a70597a57d47d597ea
  main88 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Addition.main89) -}
214de89869a0da66ba946b0b54d14f09
  main89 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Addition.main90) -}
1077c135978c76a1b2b584f1a43ce31f
  main9 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main45
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Addition.main10
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
6b98b03271c5294954c5710b77f159f9
  main90 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Addition.main91) -}
9a881fa36a8afa6ebd58f765ac6e5d12
  main91 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Addition.main92) -}
20ea49e183adea11ebe76b8ded1bf6b5
  main92 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Addition.main41
                   Addition.main93
                   GHC.Stack.Types.EmptyCallStack) -}
1451ae4d821059ac6130b3f993d0888e
  main93 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Addition.main29
                   Addition.main28
                   Addition.main27
                   Addition.main95
                   Addition.main39
                   Addition.main95
                   Addition.main94) -}
8dac91754e7c76bae0ee0653e9ce7c42
  main94 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
f52cdc530b319dd5e6b909c75506a95d
  main95 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 15#) -}
b03bb1ba7174e53273eba4704b70b95d
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main98
                   Addition.main97) -}
3efa64613a6a898afc08c1ad542d2178
  main97 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "5 divided by 3 is 5"#) -}
f371374c603309bdce8e04a999d49c21
  main98 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '1'#) -}
e73503890e7aae4c80801dd72efd0ba1
  main99 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main100
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
167432532e1eb6aaf65f8fc6342d0dad
  main_$smultiplyRecursive ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><S,U> -}
f7ea98abeeebc5cc97a3a12271e80251
  multiplyRecursive ::
    (GHC.Classes.Eq a, GHC.Num.Num a) => a -> a -> a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,U(C(C1(U)),C(C1(U)),A,A,A,A,C(U))><L,U><L,U> -}
937aa12609822550e46d8901986baec5
  sayHello :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Addition.sayHello1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
c795c8ae624a4df106e5c922c9969343
  sayHello1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Addition.sayHello2
                   GHC.Types.True
                   eta) -}
5abc666949a3eb7d3e51a8ca92f4073d
  sayHello2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "hello!"#) -}
"SPEC multiplyRecursive @ Integer" [ALWAYS] forall ($dNum :: GHC.Num.Num
                                                               GHC.Integer.Type.Integer)
                                                   ($dEq :: GHC.Classes.Eq GHC.Integer.Type.Integer)
  Addition.multiplyRecursive @ GHC.Integer.Type.Integer $dEq $dNum
  = Addition.main_$smultiplyRecursive
"SPEC/Addition $fEq(,) @ Integer @ Integer" [ALWAYS] forall ($dEq1 :: GHC.Classes.Eq
                                                                        GHC.Integer.Type.Integer)
                                                            ($dEq :: GHC.Classes.Eq
                                                                       GHC.Integer.Type.Integer)
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ GHC.Integer.Type.Integer
                      $dEq
                      $dEq1
  = Addition.$s$fEq(,)
"SPEC/Addition $fShow(,) @ Integer @ Integer" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                            GHC.Integer.Type.Integer)
                                                              ($dShow :: GHC.Show.Show
                                                                           GHC.Integer.Type.Integer)
  GHC.Show.$fShow(,) @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     $dShow
                     $dShow1
  = Addition.$s$fShow(,)
"SPEC/Addition $fShow(,)_$cshow @ Integer @ Integer" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                   GHC.Integer.Type.Integer)
                                                                     ($dShow :: GHC.Show.Show
                                                                                  GHC.Integer.Type.Integer)
  GHC.Show.$fShow(,)_$cshow @ GHC.Integer.Type.Integer
                            @ GHC.Integer.Type.Integer
                            $dShow
                            $dShow1
  = Addition.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Addition $fShow(,)_$cshowList @ Integer @ Integer" [ALWAYS] forall ($dShow1 :: GHC.Show.Show
                                                                                       GHC.Integer.Type.Integer)
                                                                         ($dShow :: GHC.Show.Show
                                                                                      GHC.Integer.Type.Integer)
  GHC.Show.$fShow(,)_$cshowList @ GHC.Integer.Type.Integer
                                @ GHC.Integer.Type.Integer
                                $dShow
                                $dShow1
  = Addition.$s$fShow(,)_$s$fShow(,)_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

